---

- block:
    - name: "Run Terraform Apply"
      docker_container:
        # The name isn't important, but required by the module. Included the epoch to reduce chance
        # of concurrent runs conflicting on the name.
        name: "terraform_apply_{{ ansible_date_time.epoch }}"
        image: "{{ terraform_docker_image }}"
        detach: false
        # use the effective user id to make working with volume mounts and permissions easier
        user: "{{ ansible_effective_user_id }}"
        state: started
        cleanup: true
        entrypoint: "/bin/sh"
        command: >
          -c 'cd "/work/" && terraform apply -no-color -auto-approve
          {% if terraform_plan_file is defined %} {{ terraform_plan_file }} {% else %}
          {% if terraform_vars_files is defined and terraform_vars_files %}
          {% for filename in terraform_vars_files %} -var-file={{ filename }} {% endfor %}{% endif %}
          {% endif %}'
        volumes: "{{ [ terraform_root_dir + ':/work' ] + terraform_volume_mounts }}"
        env: "{{ terraform_env_vars | combine({ 'HOME': '/work' }) }}"
      register: tf_output
  always:
    - name: Terraform apply output
      debug:
        msg: "{{ tf_output.container.Output.split('\n') }}"
