---

- block:
    - name: "Extract Terraform Values"
      docker_container:
        # The name isn't important, but required by the module. Included the epoch to reduce chance
        # of concurrent runs conflicting on the name.
        name: "terraform_extract_{{ ansible_date_time.epoch }}"
        image: "{{ terraform_docker_image }}"
        detach: false
        # use the effective user id to make working with volume mounts and permissions easier
        user: "{{ ansible_effective_user_id }}"
        state: started
        cleanup: true
        entrypoint: "/bin/sh"
        command: >
          -c 'cd "/work/" && terraform output -raw -no-color {{ extract_map_item.value }}'
        volumes: "{{ [ terraform_root_dir + ':/work' ] + terraform_volume_mounts }}"
        env: "{{ terraform_env_vars | combine({ 'HOME': '/work' }) }}"
      register: terraform_register_extract
  always:
    - name: Terraform extract output
      debug:
        msg: "{{ terraform_register_extract.container.Output.split('\n') }}"

- name: Check for missing output
  fail:
    msg: "Missing output {{ extract_map_item.key }} in terraform output"
  when: "'No outputs found' in terraform_register_extract.container.Output"

- name: Update ansible var
  set_fact: "{{ extract_map_item.key }}=\"{{ terraform_register_extract.container.Output }}\""
